/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MapLocation as PrismaMapLocation } from "@prisma/client";

export class MapLocationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MapLocationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.mapLocation.count(args);
  }

  async mapLocations(
    args: Prisma.MapLocationFindManyArgs
  ): Promise<PrismaMapLocation[]> {
    return this.prisma.mapLocation.findMany(args);
  }
  async mapLocation(
    args: Prisma.MapLocationFindUniqueArgs
  ): Promise<PrismaMapLocation | null> {
    return this.prisma.mapLocation.findUnique(args);
  }
  async createMapLocation(
    args: Prisma.MapLocationCreateArgs
  ): Promise<PrismaMapLocation> {
    return this.prisma.mapLocation.create(args);
  }
  async updateMapLocation(
    args: Prisma.MapLocationUpdateArgs
  ): Promise<PrismaMapLocation> {
    return this.prisma.mapLocation.update(args);
  }
  async deleteMapLocation(
    args: Prisma.MapLocationDeleteArgs
  ): Promise<PrismaMapLocation> {
    return this.prisma.mapLocation.delete(args);
  }
  async GetAdvertisementsByLocation(args: string): Promise<string> {
    throw new Error("Not implemented");
  }
}
